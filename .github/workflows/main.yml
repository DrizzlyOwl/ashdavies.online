name: deployment-pipeline

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  preflight:
    runs-on: ubuntu-20.04
    steps:
      - name: Install phpcs
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: phpcs, phpcbf
          coverage: none

      - uses: actions/checkout@v2

      - name: Scan for PSR-12 compliance
        id: phpcs
        run: phpcs --standard=PSR12 -v $GITHUB_WORKSPACE/content/themes/**/*.php

      - name: Fix any PHP formatting if possible
        id: phpcbf
        run: phpcbf --standard=PSR12 --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 -w -v $GITHUB_WORKSPACE/content/themes/**/*.php
        continue-on-error: true
        if: ${{ failure() }}

      - name: Merge corrected code
        run: |
          git config user.name "DrizzlyBot"
          git config user.email "drizzlyowl@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout "${GITHUB_REF:11}"
          git pull
          git commit -am "Automated phpcs fix"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ failure() }}

  deploy:
    needs: preflight
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Decrypt env
        env:
          GPG_KEY: ${{ secrets.ENV_KEY }}
        run: gpg --quiet --batch --yes --decrypt --passphrase="$GPG_KEY" --output config/.env config/.env.gpg

      - name: Install Deployer binary
        run: curl -LO https://deployer.org/deployer.phar && mkdir bin && mv deployer.phar bin/dep && sudo chmod +x bin/dep

      - name: Deploy to production
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: config:dump production
